var obj = {};
obj.getTotal = function (one, two, two) {
  console.log(one + two);
};
obj.getTotal(11, 22, 55);
// 66
/**
 * 어떻게 66 값이 찍혔는가 ?
 * - obj 의 getTotal() 함수가 "호출한"다.
 * - 이 때, 실행 컨택스트를 생성할 때 (함수를 호출한 오브젝트, 함수코드, 호출한 파라미터 값)을 넘긴다.
 * - 실행 컨텍스트 내부에 선언적 환경 레코드(DER) 에는
 *   + 배열형태로 넘어온,호출한 함수의 파라미터값과, 호출된 함수의 정의된 Arguments 순서에 맞게 매핑하면서 선언적 환경 레코드(DER) 에 설정
 *   + { one : 11, two : 55 } 로 설정이 된다
 * - 중요한 건, "호출된" 함수의 파라미터의 "이름"이 두번째와 세번째 이름이 "two" 로 같다.
 * - 그런데, 결과적으로는 두 번째 "two" 의 파라미터로 넘긴 55가 설정이 됐다.
 * - 이는, 첫번째 "two" 의 파라미터인 22로 DER 에 설정이 되었다가
 * - 이후에 들어온 두번째 "two" 를 설정하려고, 들어왔는데, 내부에 식별자 이름이 "two" 인 것이 22로 설정이 되어있었다.
 * - 엔진은 식별자 "two" 이름을 보고, 파라미터로 넘어온 55 값으로 설정을 하게 된다.
 * - 결과적으로, 이후에 (준비화 과정 - 초기화 과정) 을 거쳐, 실행단계에서, console 실행문을 만나고
 * - 엔진은 실행 컨텍스트의 DER을 참조했더니, one : 11, two : 55 값에 접근하여 연산 후 66 을 반환한다.
 */
